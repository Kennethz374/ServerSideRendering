{"ast":null,"code":"var _jsxFileName = \"/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Navbar from \"../components/Navbar\";\nimport axios from \"axios\";\n\nfunction Index({\n  posts\n}) {\n  // props.posts or just { posts }\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Hello page here !!!\"), posts.map(post => __jsx(\"li\", {\n    key: post.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, post.title)));\n}\n\n;\n\nIndex.getInitialProps = async () => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  const {\n    data\n  } = res;\n  console.log(data[0]);\n  return {\n    posts: data\n  };\n};\n\nexport default Index; //this is the root page;\n//create route for each page  index page === \"/\" route\n//the link will do client side rendering\n// the fetched data need to return an object so it can become a prop for index\n// so posts will be a prop in index","map":{"version":3,"sources":["/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/index.js"],"names":["Link","Navbar","axios","Index","posts","map","post","id","title","getInitialProps","res","get","data","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAyB;AACvB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,IAAI,CAACE,KAAxB,CADD,CAHH,CADF;AASD;;AAAA;;AAEDL,KAAK,CAACM,eAAN,GAAwB,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,4CAAV,CAAlB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASF,GAAf;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;AACA,SAAO;AAACR,IAAAA,KAAK,EAAEQ;AAAR,GAAP;AACD,CALD;;AAOA,eAAeT,KAAf,C,CACA;AACA;AACA;AAEA;AACA","sourcesContent":["import Link from \"next/link\";\nimport Navbar from \"../components/Navbar\"\nimport axios from \"axios\";\n\nfunction Index ({posts}) {\n  // props.posts or just { posts }\n  return (\n    <div>\n      <Navbar/>\n      <h1>Hello page here !!!</h1>\n      {posts.map(post => (\n        <li key={post.id}>{post.title}</li>\n      ) )}\n    </div>\n  )\n};\n\nIndex.getInitialProps = async () => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n  const {data} = res;\n  console.log(data[0])\n  return {posts: data};\n};\n\nexport default Index;\n//this is the root page;\n//create route for each page  index page === \"/\" route\n//the link will do client side rendering\n\n// the fetched data need to return an object so it can become a prop for index\n// so posts will be a prop in index"]},"metadata":{},"sourceType":"module"}