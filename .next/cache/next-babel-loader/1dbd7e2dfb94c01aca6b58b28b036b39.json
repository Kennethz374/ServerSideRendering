{"ast":null,"code":"var _jsxFileName = \"/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//this page represent a single post page\n// import {withRouter} from \"next/router\"\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\n\nconst Post = props => __jsx(React.Fragment, null, __jsx(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Post page \", props.id));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  return query;\n};\n\nexport default Post; // const Post = (props) => (\n//   <>\n//   <Navbar/>\n//   <h1>Post page {props.router.query.id}</h1>\n//   </>\n// );\n// export default withRouter(Post);\n//query look at documents in next\n//there is a prop call id and set to 23 or some numbers\n// query is the parse object from index fetch url \n// use withRouter to wrap the whole component, and now you can see props inside withRouter under post\n// access whatever you need from the components.","map":{"version":3,"sources":["/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/post.js"],"names":["axios","Navbar","Post","props","id","getInitialProps","query"],"mappings":";;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,MAAMC,IAAI,GAAIC,KAAD,IACX,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeA,KAAK,CAACC,EAArB,CAFA,CADF;;AAMAF,IAAI,CAACG,eAAL,GAAuB,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AACxC,SAAOA,KAAP;AACD,CAFD;;AAGA,eAAeJ,IAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA","sourcesContent":["//this page represent a single post page\n// import {withRouter} from \"next/router\"\nimport axios from \"axios\"\nimport Navbar from \"../components/Navbar\"\nconst Post = (props) => (\n  <>\n  <Navbar/>\n  <h1>Post page {props.id}</h1>\n  </>\n);\nPost.getInitialProps = async ({query}) => {\n  return query\n};\nexport default Post;\n\n\n// const Post = (props) => (\n//   <>\n//   <Navbar/>\n//   <h1>Post page {props.router.query.id}</h1>\n//   </>\n// );\n// export default withRouter(Post);\n\n\n\n\n\n//query look at documents in next\n//there is a prop call id and set to 23 or some numbers\n// query is the parse object from index fetch url \n\n\n// use withRouter to wrap the whole component, and now you can see props inside withRouter under post\n// access whatever you need from the components.\n"]},"metadata":{},"sourceType":"module"}