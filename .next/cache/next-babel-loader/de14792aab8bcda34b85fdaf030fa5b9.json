{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport Navbar from \"../components/Navbar\";\nimport axios from \"axios\";\n\nfunction Index(_ref) {\n  var posts = _ref.posts;\n  // props.posts or just { posts }\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Hello page here !!!\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/post?id=\".concat(post.id),\n      as: \"/p/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, post.title)));\n  })));\n}\n\n;\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://jsonplaceholder.typicode.com/posts\"));\n\n        case 2:\n          res = _context.sent;\n          data = res.data;\n          console.log(data[0]);\n          return _context.abrupt(\"return\", {\n            posts: data,\n            mood: \"happy\"\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index; //this is the root page;\n//create route for each page  index page === \"/\" route\n//the link will do client side rendering\n// the fetched data need to return an object so it can become a prop for index\n// so posts will be a prop in index","map":{"version":3,"sources":["/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/index.js"],"names":["Link","Navbar","axios","Index","posts","map","post","id","title","getInitialProps","get","res","data","console","log","mood"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,OAAyB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACvB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAAV;AAAmC,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAHF,CADF;AAeD;;AAAA;;AAEDL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJP,KAAK,CAACQ,GAAN,CAAU,4CAAV,CADI;;AAAA;AAChBC,UAAAA,GADgB;AAEfC,UAAAA,IAFe,GAEPD,GAFO,CAEfC,IAFe;AAGtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;AAHsB,2CAIf;AAACR,YAAAA,KAAK,EAAEQ,IAAR;AAAcG,YAAAA,IAAI,EAAC;AAAnB,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAOA,eAAeZ,KAAf,C,CACA;AACA;AACA;AAEA;AACA","sourcesContent":["import Link from \"next/link\";\nimport Navbar from \"../components/Navbar\"\nimport axios from \"axios\";\n\nfunction Index ({posts}) {\n  // props.posts or just { posts }\n  return (\n    <div>\n      <Navbar/>\n      <h1>Hello page here !!!</h1>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}>\n            <Link href={`/post?id=${post.id}`} as={`/p/${post.id}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n};\n\nIndex.getInitialProps = async () => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n  const {data} = res;\n  console.log(data[0])\n  return {posts: data, mood:\"happy\"};\n};\n\nexport default Index;\n//this is the root page;\n//create route for each page  index page === \"/\" route\n//the link will do client side rendering\n\n// the fetched data need to return an object so it can become a prop for index\n// so posts will be a prop in index"]},"metadata":{},"sourceType":"module"}