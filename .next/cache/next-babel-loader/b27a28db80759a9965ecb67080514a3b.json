{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//this page represent a single post page\n// import {withRouter} from \"next/router\"\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\n\nconst Post = ({\n  id,\n  comments\n}) => __jsx(React.Fragment, null, __jsx(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Comments for Post #\", id), comments.map(comment => __jsx(Comment, _extends({}, comment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}))));\n\nconst Comment = ({\n  email,\n  body\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, email), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, body));\n};\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query}`);\n  const {\n    data\n  } = res;\n  return _objectSpread({}, query, {\n    comments: data\n  });\n};\n\nexport default Post; // const Post = (props) => (\n//   <>\n//   <Navbar/>\n//   <h1>Post page {props.router.query.id}</h1>\n//   </>\n// );\n// export default withRouter(Post);\n//query look at documents in next\n//there is a prop call id and set to 23 or some numbers\n// query is the parse object from index fetch url \n// use withRouter to wrap the whole component, and now you can see props inside withRouter under post\n// access whatever you need from the components.","map":{"version":3,"sources":["/Users/sally/lighthouse/ReactPractise/NextJs/first-Next/pages/post.js"],"names":["axios","Navbar","Post","id","comments","map","comment","Comment","email","body","getInitialProps","query","res","get","data"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAIC,EAAAA;AAAJ,CAAD,KACX,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwBD,EAAxB,CAFA,EAGCC,QAAQ,CAACC,GAAT,CAAaC,OAAO,IACnB,MAAC,OAAD,eAAaA,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CAHD,CADF;;AAUA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AACjC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CADF;AAMD,CAPD;;AAQAP,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AACxC,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,wDAAuDF,KAAM,EAAxE,CAAlB;AACA,QAAM;AAACG,IAAAA;AAAD,MAASF,GAAf;AACA,2BAAWD,KAAX;AAAkBP,IAAAA,QAAQ,EAACU;AAA3B;AACD,CAJD;;AAKA,eAAeZ,IAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA","sourcesContent":["//this page represent a single post page\n// import {withRouter} from \"next/router\"\nimport axios from \"axios\"\nimport Navbar from \"../components/Navbar\"\n\nconst Post = ({id,comments}) => (\n  <>\n  <Navbar/>\n  <h1>Comments for Post #{id}</h1>\n  {comments.map(comment => (\n    <Comment {...comment}/>\n  ))}\n  </>\n);\n\nconst Comment = ({email, body}) => {\n  return (\n    <div>\n      <h5>{email}</h5>\n      <p>{body}</p>\n    </div>\n  )\n}\nPost.getInitialProps = async ({query}) => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query}`)\n  const {data} = res;\n  return {...query, comments:data};\n};\nexport default Post;\n\n\n// const Post = (props) => (\n//   <>\n//   <Navbar/>\n//   <h1>Post page {props.router.query.id}</h1>\n//   </>\n// );\n// export default withRouter(Post);\n\n\n\n\n\n//query look at documents in next\n//there is a prop call id and set to 23 or some numbers\n// query is the parse object from index fetch url \n\n\n// use withRouter to wrap the whole component, and now you can see props inside withRouter under post\n// access whatever you need from the components.\n"]},"metadata":{},"sourceType":"module"}